# action name
name: Build and Deploy

# action type
on:
  push:
    branches:
      - main

# job
jobs:
  build:
    # set up OS
    runs-on: ubuntu-20.04
    steps:
        # checkout git repo
      - name: Checkout code
        uses: actions/checkout@v2
        # set up project env
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
        # install packages
      - name: Install dependencies
        run: yarn install
        # build
      - name: Build project
        run: yarn run build
        # install sshpass
      - name: Install sshpass
        run: sudo apt-get install -y sshpass
        # clear last version code
      - name: clear temp file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: "echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S rm -rf /data/code/*"
        # copy build files to remote host
      - name: remote copy
        run: sudo tar -zcf build.tar.gz ./build/* && sudo sshpass -p "${{ secrets.DEPLOY_PASSWORD }}" scp -o StrictHostKeyChecking=no build.tar.gz ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_HOST }}:/data/code 
        # deploy new version in host server
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: "echo ${{ secrets.DEPLOY_PASSWORD }} |sudo -S tar -zxf /data/code/build.tar.gz -C /data/code && echo ${{ secrets.DEPLOY_PASSWORD }} |sudo -S cp -rf /data/code/build/* ${{ secrets.DEPLOY_PATH }}"
